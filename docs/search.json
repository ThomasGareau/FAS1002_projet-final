{
  "articles": [
    {
      "path": "1-intro.html",
      "title": "Titre de votre premier R Markdown",
      "description": "Petite description du contenu de cette page\n",
      "author": [
        {
          "name": {},
          "url": "https://github.com/thomasgareau"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\n« A crisis like no other »\nInclure des graphiques ou des images pour présenter les ensembles de données.\nDifférents niveaux de titres\n\n\n\n« A crisis like no other »\nCes deux dernières années ont été, à de nombreux égards, historiques en raison des dangers entourant la COVID-19 et ses variants. Pour reprendre les mots du Fond monétaire international (FMI), les marchés et les populations des 5 continents ont vécu (et vivent toujours) les chocs et contrecoups d’une « Crisis like no other ».\nQualitativement,les expériences personnelles liées à cette pandémie varient. Quantitativement, toutefois, les indicateurs ne mentent pas quant à l’étendue de cette crise qui s’est étendue à toutes les sphères de la société. Ainsi, pour tempérer la chute des indicateurs les plus centraux, les gouvernements n’y sont pas allés de main morte. L’économiste Adam Tooze (2021) va même jusqu’à affirmer que l’effort mobilisé rappelait des dimensions qui n’avaient jusqu’alors été vues uniquement en temps de guerre.\nIl s’agit d’un fichier R Markdown traditionnel, évidemment. Je vous conseille d’écrire cette partie en dernier, une fois que vous aurez déjà vos résultats et figures afin d’éviter de réécrire cette page plusieurs fois.\nInclure des graphiques ou des images pour présenter les ensembles de données.\nComme la Figure 1 par exemple:\n\n\nShow code\n\nlibrary(ggplot2)\nggplot(diamonds, aes(carat, price)) + geom_smooth() +\n  facet_grid(~ cut)\n\n\n\n\nFigure 1: Beaucoup de diamants\n\n\n\nDifférents niveaux de titres\nDans vos différents documents, assurez-vous de bien utiliser Markdown et autres.\n\n\n\n",
      "last_modified": "2021-12-21T20:07:15-05:00"
    },
    {
      "path": "2-import.html",
      "title": "Importation des variables",
      "description": "Il est ici question d'une description sommaire des données et des méthodes utilisées pour importer (périodiquement) les bases de données ici mobilisées. Nous en profitons aussi pour répondre aux deux critères établis dans les consignes en ce qui a trait à la manipulation des variables.",
      "author": [
        {
          "name": {},
          "url": "https://github.com/thomasgareau"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nLes bases de données via lesquelles sont conçues ces analyses\nLes données de Our World in Data\nLes données Gapminder\n\nManipulations\nTests d’aptitude en matière de manipulation\nCréer une variable pour les continents\nVérifier la validité de ‘total_vaccinations_per_hundred’\n\n\nLes bases de données via lesquelles sont conçues ces analyses\nCes deux dernières années ont été, à de nombreux égards, historiques en raison des dangers entourant la COVID-19 et ses variants. Pour la quasi-totalité de la communauté scientifique, la sortie de cette crise passe par la vaccination. Cette consigne a été prise à la lettre par de nombreux gouvernements, au point où certains experts ont mobilisé le terme « protectionnisme vaccinal » pour définir cette pratique corollaire d’une reproduction des inégalités à l’échelle internationale.\nAfin de déterminer l’étendue de ces inégalités de même que l’effort entrepris par ces pays, nous mobiliserons les données de quatre bases de données distinctes. D’une part, nous utiliserons les données sur la vaccination de Our World in Data. D’autre part, nous mobiliserons trois bases de données provenant de Gapminder :\nLes données sur la population mondiale\nLes données du PIB par habitant en fonction des pays\nLes données d’espérance de vie en fonction des pays\nPour des raisons purement techniques, une base de données permettant de faire la « traduction » entre les codes régionaux, les pays et les continents a ausi été utilisée. Cette base de données, appelée « Country and continent code list », est disponible ici.\nLes données de Our World in Data\nL’objectif de Our World in Data est de rendre accessibles et compréhensibles les connaissances sur les grands problèmes contemporains. Nous utiliserons les données par pays et par continent sur la vaccination mondiale dans la lutte contre la COVID-19. (disponibles en format brut ici) sont colligées via des sources publiques officielles et centralisées par l’organisation dans une même base de données. Celle-ci contient de nombreuses variables permettant de mieux saisir l’effort vaccinal dans sa complétude. L’ensemble des données présentes dans cette base de données sont énumérées dans le READ.me de la base de données.\nLes données Gapminder\nCe rapport analytique (de qualité profressionelle) portant sur les déterminants de la vaccination utilise aussi les données de Gapminder. Gapminder est un organisme à but non-lucratif enregistré en Suède. Son objectif est de lutter contre les idées fausses à l’international.\nD’une part, les données sur la population mondiale (disponibles en format brut ici) donnent accès aux informations liées à la population mondiale par pays, par continent et pour la planète, de 1800 à aujourd’hui. Nous n’utilisons toutefois que les données pour 2021, en fonction des pays et des continents.\nDeuxièmement, les données sur le produit intérieur brut par habitant (disponibles en format brut ici) donnent encore une fois accès aux données indiquées par le titre de 1800 à aujourd’hui, en fonction du monde entier, des continents et des pays. En plus du PIB per capita, le taux de croissance et le PIB total sont aussi disponibles. Encore une fois ici, nous n’utilisons que les données pour 2021.\nEnfin, le dernier jeu de données que nous utilisons (disponible ici) présente les données liées à l’espérance de vie de 1800 à aujourd’hui pour la terre, les cinq continents et les 197 pays reconnus par l’Organisation des nations unies. À nouveau, nous n’utilisons que les données de 2021.\nManipulations\nD’une part, les données de Our World in Data sont mises à jour à tout les jour. Les données de Gapminder subiront quant-à-elles un traitement similaire à tous les changements de mois. Comment avons-nous procédé pour permettre, via un script, de re-télécharger ces données périodiquement ? Si nous prenons les données de Our World in Data en guise d’exemple, nous avons procédé ainsi :\n\n\nShow code\n\n### 1.1 Data on COVID-19 (coronavirus) vaccinations by Our World in Data : \n\ncv <- file.info(\"data/raw/vaccination_raw.csv\")\ncv_date <- as_date(cv$ctime)\n\n### Mise à jour lorsque cv_date != today\n\nifelse(cv_date == today(), \"Les données « Data on COVID-19 (coronavirus) vaccinations by Our World in Data » ont été colligées dans les 24 dernières heures\", download.file(\"https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.csv\", destfile = \"data/raw/vaccination_raw.csv\"))\n\n\n\nCette façon de procéder remplace immédiatement le fichier qui n’est plus à jour pour une nouvelle mouture de cette même base de données.\nD’autre part, certaines modifications ont été exécutées à-même le fichier présentant les données sur la vaccination :\nD’abord, les observations renvoyant à des entités sous-nationales, comme l’Écosse, l’Angleterre ou la République de Chypre du Nord, ont été supprimées. De même, l’Union Européenne (en tant que seule entité supra-étatique présente dans le jeu de données) a été retirée. Les données associées aux « groupes de revenus » ont aussi été retirées.\nCertaines observations/variables non-concordantes ont été harmonisées pour que la fusion entre les jeux de données de Our World in Data et de Gapminder se fasse rondement.\nLa base de données sur la vaccination a été « pivotée », afin que nous puissons avoir la moyenne sur une semaine du nombre de vaccinations quotidiennes par continent et par pays. Par exemple :\n\n\nShow code\n\ncontinent_vaccination_semaine <- continent_vaccination %>% \n     mutate(time = format(date, \"%Y-%m-%U\")) %>% \n    pivot_wider(names_from= continent,\n                values_from=daily_vaccinations)\n\ncontinent_vaccination_semaine <- continent_vaccination_semaine %>% group_by(time) %>%\n    summarize(Africa = mean(Africa, na.rm = TRUE),\n              Europe = mean(Europe, na.rm = TRUE),\n              Asia = mean(Asia, na.rm = TRUE),\n              Americas = mean(Americas, na.rm = TRUE),\n              Oceania = mean(Oceania, na.rm = TRUE),\n              total = mean(Oceania + Africa + Americas + Asia + Europe + Africa, na.rm = TRUE))\n\n\n\nDe même, dans le cas des continents, nous avons aussi ajouté le pourcentage du nombre de doses quotidiennes par continent. Le tout donne des données très intéressantes que nous explorerons dans la prochaine section :\n\n\nShow code\n\ncontinent_vaccination_semaine = continent_vaccination_semaine %>%\n     group_by(time) %>%\n     ungroup() %>%\n     mutate(pourcentage_Africa = round(Africa/total*100),\n            pourcentage_Europe = round(Europe/total*100),\n            pourcentage_Asia = round(Asia/total*100),\n            pourcentage_Americas = round(Americas/total*100),\n            pourcentage_Oceania = round(Oceania/total*100))\n\n\n\nPour harmoniser la base de données sur la vaccination avec les différentes bases de données issues de Gapminder, il a été nécessaire de changer le nom de quelques variables, mais aussi de prendre les données de la seule année pouvant témoigner de l’effort vaccinal en cours, soit 2021 afin d’effectuer des croisements intéressants dans les analyses subséquentes. En ce qui concerne les chiffres liés à la vaccination, notre code utilise les données de vaccination totale de la veille. La synthaxe ressemble à ceci et est répété pour chacune des variables d’intérêt :\n\n\nShow code\n\ntotal_vaccination_today <- vaccination_raw %>%\n    select(c(location, total_vaccinations, date)) %>%\n    rename(country = location) %>% \n    complete(date, country) %>%\n    pivot_wider(names_from = country, values_from = total_vaccinations) %>%\n    fill(Afghanistan:Zimbabwe, .direction = \"downup\") %>%\n    subset(date == Sys.Date() -1) %>%\n    pivot_longer(Afghanistan:Zimbabwe, names_to = \"country\", values_to = \"total_vaccinations\")\n\n\n\nDe même, afin de rendre l’ensemble de nos données Tidy, les bases de données de Gapminder ont elles aussi dû être « pivotées » pour qu’elles se départissent de leur modalité longitudinale. Il s’agit en quelque sorte d’émuler ce que propose le gif ci-bas :\nSource : Education rstudioLa commande exécutée est donc la suivante :\n\n\nShow code\n\ncountry_lifeexp <- countries_lifeexp_raw\n    country_lifeexp <- country_lifeexp %>%\n    subset(time == 2021) %>%\n    pivot_wider(names_from=time, values_from=\"Life expectancy\")\n\n\n\nLa totalité du script de manipulation est disponible sur le repository de ce rapport.\nTests d’aptitude en matière de manipulation\nCréer une variable pour les continents\nAfin de tester nos habiletés, deux tâches nous étaient explicitement demandées :\nD’une part, il faillait créer une nouvelle variable pour l’ensemble des données permettant de regrouper les différents pays en continents. Nous y sommes parvenus grâce à ce que nous appelons affectueusement notre “iso-translator” :\n\n\nShow code\n\niso_translator <- iso_translator %>%\n    select(Continent_Name, Three_Letter_Country_Code)\n\niso_translator <- iso_translator %>%\n    rename(geo = Three_Letter_Country_Code) %>%\n    mutate(geo = tolower(geo))\n\ndf_country <- full_join(iso_translator, df_country, by=\"geo\") %>% \n    drop_na(\"total_vaccinations\")\n\n\n\n\n\nShow code\n\npreuve <- df_country %>%\n  select(Continent_Name, country)\n\nkable(head(preuve), caption = \"Ajout de la variable continent\") %>%\n  kable_styling()\n\n\n\nTable 1: Ajout de la variable continent\n\n\nContinent_Name\n\n\ncountry\n\n\nAsia\n\n\nAfghanistan\n\n\nEurope\n\n\nAlbania\n\n\nAfrica\n\n\nAlgeria\n\n\nEurope\n\n\nAndorra\n\n\nAfrica\n\n\nAngola\n\n\nNorth America\n\n\nAntigua and Barbuda\n\n\nVérifier la validité de ‘total_vaccinations_per_hundred’\nDans les données de vaccinations, il nous fallait vérifier la validité de la variable total_vaccinations_per_hundred.\nAfin de recalculer le taux pour chaque pays dans une nouvelle variable, il nous faut prendre la population estimée pour 2021 du jeu de données de Gapminder sur la population mondiale :\n\n\nShow code\n\npreuve <- df_country %>%\n  select(total_vaccinations_per_hundred, verification_vaccination_par_100)\n\nkable(head(preuve), caption = \"Bonnet blanc, blanc bonnet\") %>%\n  kable_styling()\n\n\n\nTable 2: Bonnet blanc, blanc bonnet\n\n\ntotal_vaccinations_per_hundred\n\n\nverification_vaccination_par_100\n\n\n13.13\n\n\n13.12577\n\n\n78.35\n\n\n78.35230\n\n\n27.88\n\n\n27.87599\n\n\n149.58\n\n\n149.58373\n\n\n31.84\n\n\n31.84241\n\n\n121.35\n\n\n121.35261\n\n\nCes valeurs sont quasi-identitiques. Mission accomplie !\nSource : Giphy\n\n\n",
      "last_modified": "2021-12-21T20:54:08-05:00"
    },
    {
      "path": "3-exploration.html",
      "title": "Exploration des données",
      "description": "Dans cette section, nous explorons les données à l'aide des nombreux outils offerts par le langage R",
      "author": [
        {
          "name": {},
          "url": "https://github.com/thomasgareau"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nSection descriptive\n1. df_continent\n2. df_country\n3. df_semaine\n\nMESURE DE DISPERSION (sd et iqr)\nPeut-être que ça vous inspirera!\n\n\nSection descriptive\n1. df_continent\nLe dataframe df_continent recense les variables de Gapminder et de Our World in Data en fonction des continents. Les données permettent d’entrevoir d’importants écarts entre pays en ce qui a trait aux indicateurs qui y ont été ajoutés :\n\n\nShow code\n\ntableau_1 <- datatable(df_continent, \n  fillContainer = TRUE, \n  options = list(pageLength = 20),\n    caption = \"Tableau 1 : Données sur la vaccination par continent\")\ntableau_1\n\n\n\n{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Tableau 1 : Données sur la vaccination par continent<\\/caption>\",\"fillContainer\":true,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[\"Afrique\",\"Asie\",\"Europe\",\"The Amériques\"],[67.2,74.03,78.97,77.58],[4698,13520,36581,31748],[6443655202262,62436004910023,31122935030634,32578837345663],[1.5,6.06,4.2,4.93],[287068127,5947307329,1057611752,1433314375],[182194381,3063737261,483416660,729173840],[117688986,2548691392,452090401,608941746],[726927,179304729,143501810,113294564],[2558273,24232269,5114166,3981869],[20.9,127.12,141.21,279.83],[13.27,65.49,64.54,142.69],[8.57,54.48,60.36,119.1],[0.05,3.83,19.16,21.82],[1371687302,4617906978,850833567,1026162143]],\"container\":\"<table class=\\\"display fill-container\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>continent<\\/th>\\n      <th>lifeeexp_2021<\\/th>\\n      <th>Income.per.person<\\/th>\\n      <th>GDP.total<\\/th>\\n      <th>growth_2021<\\/th>\\n      <th>total_vaccinations<\\/th>\\n      <th>people_vaccinated<\\/th>\\n      <th>people_fully_vaccinated<\\/th>\\n      <th>total_boosters<\\/th>\\n      <th>daily_vaccinations<\\/th>\\n      <th>total_vaccinations_per_hundred<\\/th>\\n      <th>people_vaccinated_per_hundred<\\/th>\\n      <th>people_fully_vaccinated_per_hundred<\\/th>\\n      <th>total_boosters_per_hundred<\\/th>\\n      <th>population_2021<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9,10,11,12,13,14,15]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,20,25,50,100]}},\"evals\":[],\"jsHooks\":[]}\nLes observations étant limtées à 4 (les données de Gapminder ignorant l’Océanie), il est difficile d’inférer quoi que ce soit des mesures de centralité ou de dispersion. Il convient toutefois de noter les disparités en termes de vaccination totale par cent habitants (total_vaccinations_per_hundred). L’écart entre les Amériques et le reste du monde a de quoi laisser dubitatif. Concernant, les statistiques descriptives, celles-ci se présentent ainsi :\n\n\nShow code\n\ntableau_2 <- df_continent %>%\n  select(Income.per.person, total_vaccinations, growth_2021, people_vaccinated) %>%\ndatasummary_skim() %>%\n  kable_styling(font_size = 4, full_width = FALSE)\ntableau_2\n\n\n\n\n\nUnique (#)\n\n\nMissing (%)\n\n\nMean\n\n\nSD\n\n\nMin\n\n\nMedian\n\n\nMax\n\n\n\n\nIncome.per.person\n\n\n4\n\n\n0\n\n\n21636.8\n\n\n15037.4\n\n\n4698.0\n\n\n22634.0\n\n\n36581.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\ntotal_vaccinations\n\n\n4\n\n\n0\n\n\n2181325395.8\n\n\n2555587562.1\n\n\n287068127.0\n\n\n1245463063.5\n\n\n5947307329.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\ngrowth_2021\n\n\n4\n\n\n0\n\n\n4.2\n\n\n1.9\n\n\n1.5\n\n\n4.6\n\n\n6.1\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\npeople_vaccinated\n\n\n4\n\n\n0\n\n\n1114630535.5\n\n\n1318517100.2\n\n\n182194381.0\n\n\n606295250.0\n\n\n3063737261.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\nEn soi, cette banque de données ne sera pas utilisée dans nos analyses. Celle-ci permet malgré tout d’appréhender les différences entre les cadres nationaux en termes de vaccination. De plus, des données plus précises sur les continents se trouvent dans la banque de données suivante. Ce sont ces données qui seront utiliées dans le cadre des prochaines analyses. celles-ci nous ont toutefois permis d’introduire l’étude des déterminants nationaux de la vaccination, soit ce que nous tâcherons d’élaborer ici.\n2. df_country\nLa deuxième banque de données est beaucoup plus riche en raison du nombre d’observations qui y est associé.\nLa fonction glimpse permet d’avoir un aperçu de ce que nous pourrons observer via df_country\n\n\nShow code\n\nglimpse(df_country)\n\n\nRows: 185\nColumns: 15\n$ Continent_Name                      <chr> \"Asie\", \"Europe\", \"Afriq…\n$ date                                <chr> \"2021-12-20\", \"2021-12-2…\n$ country                             <chr> \"Afghanistan\", \"Albania\"…\n$ lifeeexp_2021                       <dbl> 64.74, 78.70, 78.49, NA,…\n$ Income.per.person                   <int> 1950, 13950, 10735, 6370…\n$ GDP.total                           <dbl> 7.766099e+10, 4.007843e+…\n$ growth_2021                         <dbl> 2.17, 4.17, 1.01, 3.44, …\n$ people_fully_vaccinated_per_hundred <dbl> 8.95, 35.10, 12.45, 65.3…\n$ people_vaccinated_per_hundred       <dbl> 11.04, 38.96, 15.73, 73.…\n$ verification_vaccination_par_100    <dbl> 13.12577, 78.35230, 27.8…\n$ total_vaccinations_per_hundred      <dbl> 13.13, 78.35, 27.88, 149…\n$ people_fully_vaccinated             <int> 3566192, 1008465, 555470…\n$ total_boosters                      <int> NA, 123115, 25381, 8530,…\n$ total_vaccinations                  <dbl> 5228706, 2251010, 124373…\n$ population_2021                     <int> 39835428, 2872934, 44616…\n\nEn tableau « interactif », il est possible de saisir un peu mieux cette vaste banque de données.\n\n\nShow code\n\ntableau_3 <- datatable(df_country, \n  fillContainer = TRUE, \n  options = list(pageLength = 20),\n    caption = \"Données sur la vaccination par continent\")\ntableau_3\n\n\n\n{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Données sur la vaccination par continent<\\/caption>\",\"fillContainer\":true,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\"],[\"Asie\",\"Europe\",\"Afrique\",\"Europe\",\"Afrique\",\"North America\",\"Europe\",\"Asie\",\"South America\",\"Océanie\",\"Europe\",\"North America\",\"Asie\",\"Asie\",\"Europe\",\"Asie\",\"North America\",\"Europe\",\"Asie\",\"South America\",\"Europe\",\"Afrique\",\"South America\",\"North America\",\"Océanie\",\"Asie\",\"Europe\",\"Asie\",\"Afrique\",\"Europe\",\"Asie\",\"Afrique\",\"North America\",\"Afrique\",\"Afrique\",\"Asie\",\"Afrique\",\"South America\",\"Asie\",\"Asie\",\"South America\",\"Afrique\",\"North America\",\"Europe\",\"North America\",\"Europe\",\"Asie\",\"Afrique\",\"Europe\",\"North America\",\"North America\",\"South America\",\"North America\",\"Afrique\",\"Afrique\",\"Europe\",\"Océanie\",\"Europe\",\"Europe\",\"Afrique\",\"Afrique\",\"Europe\",\"Asie\",\"Afrique\",\"Asie\",\"Europe\",\"Afrique\",\"Océanie\",\"Europe\",\"North America\",\"North America\",\"Afrique\",\"South America\",\"North America\",\"North America\",\"Europe\",\"Europe\",\"Asie\",\"Asie\",\"Asie\",\"Asie\",\"Europe\",\"Asie\",\"Europe\",\"Afrique\",\"North America\",\"Asie\",\"Europe\",\"Asie\",\"Asie\",\"Afrique\",\"Asie\",\"Asie\",\"Asie\",\"Afrique\",\"Europe\",\"Afrique\",\"Afrique\",\"Europe\",\"Europe\",\"Europe\",\"Afrique\",\"Afrique\",\"Asie\",\"Asie\",\"Afrique\",\"Europe\",\"Afrique\",\"Afrique\",\"North America\",\"Europe\",\"Asie\",\"Europe\",\"Europe\",\"Afrique\",\"Afrique\",\"Asie\",\"Afrique\",\"Océanie\",\"Asie\",\"Europe\",\"Océanie\",\"Océanie\",\"North America\",\"Afrique\",\"Afrique\",\"Europe\",\"Asie\",\"North America\",\"Océanie\",\"South America\",\"South America\",\"Asie\",\"Europe\",\"Europe\",\"Afrique\",\"Asie\",\"Europe\",\"Europe\",\"Asie\",\"Afrique\",\"Europe\",\"Afrique\",\"Asie\",\"Afrique\",\"Europe\",\"Afrique\",\"Afrique\",\"Asie\",\"Asie\",\"Europe\",\"Afrique\",\"Afrique\",\"Afrique\",\"Europe\",\"Afrique\",\"Afrique\",\"South America\",\"Europe\",\"Europe\",\"Asie\",\"Asie\",\"Asie\",\"Afrique\",\"Océanie\",\"North America\",\"Asie\",\"Afrique\",\"Europe\",\"Asie\",\"Asie\",\"Océanie\",\"Afrique\",\"Europe\",\"Afrique\",\"Europe\",\"Afrique\",\"North America\",\"Afrique\",\"South America\",\"Asie\",\"South America\",\"Océanie\",\"Asie\",\"Afrique\"],[\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\",\"2021-12-20\"],[\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Antigua and Barbuda\",\"Azerbaijan\",\"Azerbaijan\",\"Argentina\",\"Australia\",\"Austria\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Armenia\",\"Armenia\",\"Barbados\",\"Belgium\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Belize\",\"Solomon Islands\",\"Brunei\",\"Bulgaria\",\"Myanmar\",\"Burundi\",\"Belarus\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Central African Republic\",\"Sri Lanka\",\"Chad\",\"Chile\",\"China\",\"Taiwan\",\"Colombia\",\"Comoros\",\"Costa Rica\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Cyprus\",\"Benin\",\"Denmark\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"El Salvador\",\"Equatorial Guinea\",\"Ethiopia\",\"Estonia\",\"Fiji\",\"Finland\",\"France\",\"Djibouti\",\"Gabon\",\"Georgia\",\"Georgia\",\"Gambia\",\"Palestine\",\"Germany\",\"Ghana\",\"Kiribati\",\"Greece\",\"Grenada\",\"Guatemala\",\"Guinea\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Cote d'Ivoire\",\"Jamaica\",\"Japan\",\"Kazakhstan\",\"Kazakhstan\",\"Jordan\",\"Kenya\",\"South Korea\",\"Kuwait\",\"Lebanon\",\"Lesotho\",\"Latvia\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Monaco\",\"Mongolia\",\"Moldova\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Oman\",\"Namibia\",\"Nauru\",\"Nepal\",\"Netherlands\",\"Vanuatu\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"Norway\",\"Pakistan\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Guinea-Bissau\",\"Qatar\",\"Romania\",\"Russia\",\"Russia\",\"Rwanda\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Vietnam\",\"Slovenia\",\"Somalia\",\"South Africa\",\"Zimbabwe\",\"Spain\",\"South Sudan\",\"Sudan\",\"Suriname\",\"Sweden\",\"Switzerland\",\"Syria\",\"Tajikistan\",\"Thailand\",\"Togo\",\"Tonga\",\"Trinidad and Tobago\",\"United Arab Emirates\",\"Tunisia\",\"Turkey\",\"Turkey\",\"Turkmenistan\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"Egypt\",\"United Kingdom\",\"Tanzania\",\"United States\",\"Burkina Faso\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Samoa\",\"Yemen\",\"Zambia\"],[64.74,78.7,78.49,null,65.71,77.54,71.28,71.28,77.25,83,82.25,74.34,80.02,74.23,76.18,76.18,77.57,82.02,75.34,73.85,77.29,70.17,76.34,74.69,69.1,75.9,75.36,69.53,62.91,74.77,70.87,64.51,82.46,76.57,53.63,78.14,61.22,80.28,77.87,80.63,80.84,69.51,80.21,79.13,78.75,82.34,82.34,65.9,81.25,null,73.82,77.57,74.9,67,69.88,78.77,68.52,82.1,83.33,69.25,69.47,73.47,73.47,67.14,77.51,81.23,66.68,63.33,81.65,74.2,73.55,62.29,69.71,66.29,74.7,77.47,83.31,69.91,72.28,78.16,77.37,82.61,83.59,83.79,63.99,75.09,84.78,73.19,73.19,79.86,67.18,83.3,83.54,78.23,57.04,75.67,65.83,73.67,null,75.75,82.26,64.87,65.04,75.34,82.66,63.65,81.6,71.46,75.31,75.8,null,69.68,73.31,76.98,74.85,60.79,77.99,67.94,null,72.11,82.08,65.27,82.21,79.7,63.93,66,82.89,67.48,80,59.34,76.6,81.23,70.25,78.71,82.2,61.31,80.73,75.7,72.81,72.81,69.74,null,67.67,77.43,69.16,76.31,73.92,62.14,85.42,74.88,81.71,59.83,67.43,62.51,83.58,60.26,71.25,72.51,83.08,84.55,73.34,71.17,78.96,65.61,72.21,74.75,73.9,79.12,79.96,79.96,70.6,null,67.29,71.01,71.29,81.35,68.41,78.7,63.32,77.61,70.9,75.18,73.4,68.25,64.61],[1950,13950,10735,63705,6060,17075,13773,13773,20613,50130,53632,30985,42277,5029,12745,12745,13347,50103,11289,8249,14765,16813,14390,5851,2477,63588,23631,4769,719,19133,4344,3482,47650,6368,943,12957,1502,24346,17744,57024,14043,2887,19417,27836,10179,37790,37790,3330,57128,10631,17778,10489,8278,17027,2328,37024,11511,48369,44559,5444,14482,14637,14637,2221,5578,52867,5510,2226,29159,14354,8540,2709,14119,2758,5318,32377,51911,6819,11829,12635,9314,90930,39744,40378,5366,8872,41241,25820,25820,9828,4446,43897,43633,10016,2621,31298,1365,13840,null,38117,113004,1548,1029,27805,15216,2230,40243,5020,20525,18691,70021,11830,13076,19939,7156,1235,26274,8663,11395,3361,56038,2802,42920,5244,1229,4916,66160,4569,28130,4156,12718,12146,8371,33477,33626,1915,89352,30683,27197,27197,2248,56609,3651,44534,3408,19227,25346,1658,94610,8648,37825,673,11626,2587,38778,1800,3638,14060,51272,67374,3984,3568,17698,1585,6212,24421,61292,9983,29809,29809,15988,4376,2136,12894,12000,43908,2602,63517,2161,20797,7203,5285,5721,2372,3173],[77660991250,40078428539,478970233056,4927820447,205637996110,1685787899,140804665584,140804665584,940072982184,1292771256938,484999571086,12298267893,73912627833,836416089227,37828076148,37828076148,3840019377,582820133539,8804142012,97612676280,48184806971,40305644596,3079431355457,2369315974,1743452809,28076088275,162976949316,261393458894,8813046067,180672822434,73620827108,94789307542,1813949801645,3578314125,4639221714,278539782821,25408321423,467746480632,25626456257369,1360312454176,719919723390,2564775335,99784881674,113616462429,115195724719,45936740708,45936740708,41459785790,332102152627,767251752,194737018412,187625789704,53957646545,24686678094,274383888384,49064341207,10392849135,268370261833,2915321433252,5456188032,33001380451,58251910145,58251910145,5523012498,29134715317,4435526988807,174846933220,270175518,302396763978,1622272755,155860725915,36558975554,11158740248,31828523183,53518742176,311929605621,17824175938,9500960586370,3269041936630,1074299482267,383552326769,453093654115,349336647408,2437506704811,145172739790,26379759897,5198413930090,490455386925,490455386925,100926719038,244452714976,2252157006501,188867337043,67800313287,5659534582,58431995073,7071130071,96309431432,null,102529312834,71736259697,44009545955,20225105145,911343281537,8271841576,46510796484,17819165862,23969502966,26137579335,2434774026047,2767235819,39386189135,52616590074,12522485588,267222995456,39712828055,137237978324,22415341938,123898752,99737368107,962349111579,881127477,208619758021,35147363510,30877172412,1039200012005,361604669091,1029010060700,123255319258,37899828171,91816412732,405187835766,929583556006,1265331380483,341901783772,3859054011,261849576198,586902936094,3968310654075,3968310654075,29843548535,1925277576,815604322,1573877832885,58608161608,167231630840,2506924974,13500598872,557882618041,848968527469,78628339641,11012785485,698031671445,39046735435,1812675891643,20482007813,163377515606,8320503520,520927569467,587199093893,72803383235,34790505680,1237996861657,13435047467,663211894,34271521482,612376995226,119160007212,2535062468512,2535062468512,97812499597,52189688,100650940241,560460420739,1251069058922,2994810557900,160007895660,21145722037487,46465267772,72482053762,244451080400,151709023052,1145017194,72320693107,60027026593],[2.17,4.17,1.01,3.44,-0.6,10.29,0.49,0.49,1.46,2.02,3.48,7.3,1.13,6.39,3.54,3.54,7.43,2.65,4.65,2.68,3.66,3.24,1.94,4.29,2.25,2.31,5.03,0.78,0.69,1.31,4.93,1.73,3.54,4.71,2.98,3.47,-0.34,2.76,5.33,2.98,2.69,-0.1,2.23,5.82,2.11,2.72,2.72,3.11,2.54,5.84,3.98,-0.11,2.33,-8.81,6.96,4.2,8.4,2.44,3.93,2.58,1.46,5.7,5.7,3.39,4.53,3.31,3.46,0.81,5.42,4.58,1.93,2.68,4.14,-0.2,1.52,5.93,2.01,5.93,4.8,1.13,1.74,3.85,2.39,3.69,3.77,5.58,2.95,2.69,2.69,1.86,3.4,2.74,0.43,-3.79,3.02,5.4,2.17,4.4,null,3.22,1.67,2.46,3.52,4.67,11.5,2.9,4.53,3.26,5.22,2.09,1.04,5.75,5.89,5.43,2.89,1.99,4.43,0.43,-1.04,2.87,2.7,1.89,2.08,1.64,8.68,-0.22,3.37,2.06,3.61,2.11,2.6,4.12,4.91,4.65,5.01,1.74,3.35,4.81,3.83,3.83,4.45,3.06,3.15,1.99,3.16,4.92,3.33,1.38,2.04,6.23,4.2,0.29,0.44,1.87,4.25,3.47,-1.43,0.32,1.98,1.58,1.68,2.59,5.45,1.98,2.63,3.58,-0.46,1.5,2.29,2.29,2.83,3.11,1.93,3.81,3.59,4.59,1.59,2.92,2.23,2.76,3.5,-2.64,0.82,0.1,-1.91],[8.95,35.1,12.45,65.35,10.49,58.63,45.41,45.41,69.61,75.96,70.13,36.73,66.93,26.9,19.63,19.63,49.37,75.4,72.4,37.42,22.08,41.81,66.22,48.95,7.95,87.29,27.23,21.64,0.02,32.19,80.21,2.3,76.99,45.55,6.99,64.24,0.48,85.44,82.64,64.63,53.06,27.55,65.47,51.22,83.89,66.63,66.63,8.53,77.73,37.93,51.84,67.88,63.36,14.03,1.23,61.15,67.07,73.63,72.14,2.6,7.6,27.34,27.34,9.18,26.88,69.77,4.93,18.68,66.26,31.03,24.59,6.06,36.24,0.61,38.67,61.71,82.41,39.54,38.78,59.2,13.12,76.74,62.87,73.68,5.57,18.6,78.03,44.03,44.03,37.68,6.53,82.12,74,26.3,29.69,66.71,14.58,11.3,66.63,67.57,67.69,1.9,3.32,77.95,67.36,1.69,84.22,14.9,71.85,51.25,58.98,64.89,24.01,42.59,61.4,16.8,55.34,12.61,66.69,29.4,74.65,16.03,74.34,39.98,1.85,1.96,71.39,27.43,56.05,2.41,39.77,61.37,39.81,55.19,89.1,1.13,75.7,40.4,43.66,43.66,31.5,63.58,22.93,64.96,5.47,46.16,79.1,4.73,87,57.44,56.73,4.56,25.98,20.37,80.85,1.6,2.75,38.08,72.11,66.44,4.24,32.89,63.18,10.95,53.04,47.04,90.28,46.04,60.21,60.21,52.41,49.34,2.99,30.1,18.31,68.98,1.75,61,1.55,76.62,32.72,40.44,60.84,1.2,5.17],[11.04,38.96,15.73,73.21,21.35,62.72,50.29,50.29,82.59,78.9,72.54,39.61,68.42,52.64,29.3,29.3,53.96,76.41,75.58,45.03,27.05,46.97,77.33,56.73,25.56,91.75,27.61,30.74,0.03,43.04,83.95,2.96,82.75,53.89,9.08,74.28,1.69,89.3,84.82,78.04,73.8,31.78,76.32,54.95,91.13,71.02,71.02,10.95,81.79,40.46,63.21,78.49,68.5,17.19,7.78,63.2,73.26,77.91,77.72,10.87,17.24,32.95,32.95,9.74,38.68,72.81,8.36,49.01,70.99,36.33,35,12.5,51.38,1.04,48.96,64.69,83.65,59.51,54.92,69.54,20.09,77.92,69.56,79.44,12.22,23.74,79.49,46.85,46.85,41.69,10.79,85.02,76.83,31.83,30.05,69.76,15.15,26.2,68.08,70.78,72.26,2.07,6.9,79.17,72.91,4.09,84.86,23.3,71.97,62.81,67.49,68.02,24.6,44.81,65.85,24.39,59.76,14.97,70.01,35.15,77.41,32.53,77.43,69.06,2.02,4.17,78.16,39.56,68.94,3.11,47.71,71.52,50.53,56.68,89.1,19.31,80.54,41.24,49.25,49.25,51.58,71.4,38.68,70.42,7.72,47.91,83.23,9.18,87,77.11,59.75,6.65,31.1,26.9,83.45,2,8.94,43.99,75.86,68.15,6.49,44.87,72.11,16.12,68.95,50.11,98.99,53.85,66.65,66.65,71.51,52.24,17.73,33.18,30.25,75.5,2.59,72.85,2.06,79.27,54.57,64.08,70.66,1.83,4.26],[13.1257683487171,78.352304647444,27.8759850644018,149.583731933707,31.8424142953722,121.352605137347,108.25177163167,108.25177163167,161.606547479694,160.715500416334,176.345792668686,73.8764568647112,178.58210427874,79.5427521204094,48.9323236733726,48.9323236733726,103.328722176651,178.321616280963,147.979612770868,78.0166562212455,47.6143257813259,88.78339256812,152.151151679457,104.085548818888,33.5113175519712,179.037079985143,52.2381067343517,52.380693111526,0.0496596243183327,76.4357583348362,176.026991146108,3.62280160248237,171.760374675649,101.642460148674,16.0728473469544,150.177450141892,2.16722036702959,223.647456778089,186.61895517351,142.668256493563,121.959996715942,59.3297811033974,143.002319688083,111.441235753029,259.156529119775,118.962181265363,118.962181265363,11.4481122085392,193.776841457746,78.390511555728,127.83091652749,148.021569643112,145.220863695636,31.2142085163643,9.00987617299522,113.809965076653,140.330756817761,161.195729693868,180.340851949824,13.4735985040865,24.8382392886873,60.291931223213,60.291931223213,10.9932418875106,60.9806010466505,170.659294630182,13.2892757775337,67.689557452137,158.209914869199,67.3609697827722,59.5962831073627,18.5632881752021,88.3511803312291,1.64675290423416,89.7429134907563,152.123018068411,205.036987418453,99.0536989004865,93.7017294880145,133.1783986971,33.2327068486339,182.748573923961,187.354728948724,176.099848542603,17.7877614866383,39.8407647382075,157.722143222324,90.8808695444338,90.8808695444338,79.3782796453255,16.2109233414898,188.329629614037,156.879354370849,58.1221928717501,31.8701087089933,132.223849370144,16.9937770838545,37.4993281634734,159.293145814817,148.257642957148,159.760496775433,2.61040668148503,8.34466418708651,169.250411769884,144.331702292042,4.82669889570844,228.715869825425,38.2009838516809,158.097748753758,108.881692635056,126.467611336032,132.901148055346,42.7753058194221,87.402615392699,133.157896977696,41.1969824374527,115.754829826534,27.5803294807339,136.696403936356,64.5576938370853,144.728847346902,48.5623155591737,165.144789515459,109.042878655474,3.86631389915407,6.13608599903244,172.925842569995,63.3720026616882,130.661384253134,5.52711617111735,89.8903421929151,139.437012326595,91.5434738346164,120.975185861312,184.96407771774,20.4417784260899,174.671048590627,81.702129239098,96.1246517439118,96.1246517439118,83.0797715997351,153.022640399882,61.6088537096399,137.166143945165,13.1969199435135,93.1296835763003,185.352340511576,11.3480048684842,160.925428596818,141.361125943552,134.978542114558,8.37067147528959,45.8243893157716,47.276253363416,178.633402681614,2.36034708278269,11.6929656810226,82.0644882206429,167.805169190758,150.726407476157,9.50978413745375,61.0352705873303,142.0785130198,27.0681115259508,121.990651841999,97.7792092485681,222.010887108034,94.901046971103,146.882062919518,146.882062919518,123.914008211597,101.584905660377,20.7179499890214,63.2296467406796,47.7144976630979,186.971924951993,2.76352222149122,149.058907738134,3.6141670663718,198.310346291926,110.053402361786,104.684791788677,131.499820129507,2.57792891779015,7.58172932366989],[13.13,78.35,27.88,149.58,31.84,121.35,108.25,108.25,161.61,160.72,176.35,73.88,178.58,79.54,48.93,48.93,103.33,178.32,147.98,78.02,47.61,88.78,152.15,104.09,33.51,179.04,52.24,52.38,0.05,76.44,176.03,3.62,171.76,101.64,16.07,150.18,2.17,223.65,186.62,142.67,121.96,59.33,143,111.44,259.16,161.39,161.39,11.45,193.78,78.39,127.83,148.02,145.22,31.21,9.01,113.81,140.33,161.2,174.63,13.47,24.84,60.29,60.29,10.99,60.98,170.66,13.29,67.69,158.21,67.36,59.6,18.56,88.35,1.65,89.74,152.12,205.04,99.05,93.7,133.18,33.23,182.75,177.25,176.1,17.79,39.84,157.72,90.88,90.88,79.38,16.21,188.33,156.88,58.12,31.87,132.22,16.99,37.5,159.29,148.26,159.76,2.61,8.34,169.25,144.33,4.83,196.23,38.2,158.1,108.88,126.47,132.9,42.78,87.4,133.16,41.2,115.75,27.58,136.7,64.56,144.73,48.56,156.7,109.04,3.87,6.14,172.93,63.37,130.66,5.53,89.89,139.44,91.54,120.98,184.96,20.44,174.67,81.7,96.12,96.12,83.08,153.02,61.61,137.17,13.2,117.88,185.35,11.35,174,141.36,134.98,8.37,45.82,47.28,178.63,2.36,11.69,82.06,167.81,150.73,9.51,61.04,142.08,27.07,121.99,97.78,222.01,94.9,146.88,146.88,123.91,101.58,20.72,63.23,47.71,186.97,2.76,149.47,3.61,198.31,110.05,104.68,131.5,2.58,7.58],[3566192,1008465,5554702,50551,3559041,57888,4641918,4641918,31747174,19587839,6341664,145793,1170160,44735702,582624,582624,142043,8771125,564611,4427369,720631,1002358,141702263,198204,55945,385414,1877872,11858598,2076,3039334,13592006,627046,29308292,255954,344070,13810482,80663,16414823,1193466000,15416824,27199605,244741,3364478,2090818,9494597,597008,597008,1062378,4518746,27376,5678863,12142003,4130209,203357,1454887,810360,605593,4085152,48738547,26087,173123,1088111,1088111,228266,1403992,58539367,1565507,22675,6871578,35064,4487882,818351,286437,69835,3891577,5945349,282962,551003319,107180178,50340978,5402359,3824067,5841107,44480344,1505936,553109,98362579,8363114,8363114,3869746,3592043,42131332,3203278,1780078,641007,1245351,755263,786157,25490,1817452,429705,541160,651693,25547435,366165,353103,434679,711701,914936,66753364,23308,2160217,966337,267480,22929634,5404760,2890827,326185,7251,8725785,12818905,50403,3808013,2679570,464413,4153915,3901947,61761440,2455800,220103,2871213,20472834,44212255,20861652,9059512,22845,2218292,7726940,63708591,63708591,4182307,21623,51216,22958830,941230,3172131,78238,385232,4744632,56385381,1179177,745600,15599136,3074691,37791863,181577,1234386,225352,7326603,5790576,774866,3206282,44194781,928238,56627,660103,9020082,5495388,51202223,51202223,3206282,5884,1408222,13082157,19089596,47051876,1078102,202527536,334172,2670347,11102403,11608305,121765,366587,978860],[null,123115,25381,8530,null,null,1284115,1284115,4125486,1511654,3388226,null,null,null,null,null,null,3505951,null,459041,22572,null,23326643,null,null,null,226043,null,null,114146,3065752,null,4577050,null,null,2505477,null,9969646,120580000,64155,2677561,null,62297,null,null,212703,212703,null,2037991,null,1399659,731529,870874,null,null,null,null,535891,17798433,null,null,null,null,null,2779,27112902,null,null,2901269,null,null,null,5756,null,212537,3114011,189655,null,null,3772199,null,1635920,4164423,15372514,null,null,245993,null,null,null,null,12377850,108687,null,null,197274,null,null,10291,532701,156467,null,null,4174420,22093,null,172357,null,null,null,null,null,null,null,null,null,32412,null,null,null,null,null,252872,null,null,null,1277365,null,248483,null,174286,2182463,1153103,6001613,2325024,null,null,null,5981515,5981515,null,null,null,null,null,1635856,null,null,622452,null,384516,null,null,null,11071984,null,null,null,2015251,1550909,null,null,4751709,null,null,55829,3270769,701546,17026098,17026098,null,null,null,null,null,28978244,null,60715948,null,1478338,null,null,null,null,null],[5228706,2251010,12437324,115709,10805281,119809,11066951,11066951,73701996,41445662,15947077,293226,3122142,132282376,1452374,1452374,297285,20742966,1154093,9231661,1553874,2128351,325593485,421458,235918,790506,3602682,28707770,6086,7217727,29830319,986281,65385590,571130,790782,32284106,366585,42967959,2695181000,34033524,62523818,527119,7348965,4548649,29330035,1446090,1446090,1425408,11264833,56576,14002233,26478800,9466222,452572,10620502,1508196,1267045,8943721,117990125,135032,566021,2399482,2399482,273395,3184868,143183952,4216970,82167,16407550,76128,10876243,2505531,698265,190063,9030824,14655778,704015,1380223188,258955775,113239941,13685013,9106186,16468061,106307025,4812235,1184650,198810017,17262783,17262783,8151373,8913690,96622863,6790606,3934379,688097,2468532,880313,2609405,60936,3987926,1014182,742069,1639533,55473845,784616,1006643,1012731,1824139,2013261,141831710,49980,4424654,1721289,548933,49727533,13250204,6046310,713598,14863,19157444,24854421,152711,8027097,7308467,971636,12971729,9451485,142713705,5725037,504018,6489760,46515373,101656199,45724991,18807005,412002,5118777,15627797,140257423,140257423,11030100,52043,137612,48475448,2269383,8099998,183332,923880,9489264,138772562,2805830,1369400,27513878,7135013,83502561,268640,5251235,485656,17049272,13136551,1737980,5950710,99385119,2294900,130236,1372208,22181292,11327165,124912525,124912525,7580976,12114,9763030,27483918,49746337,127528154,1699523,496239573,776941,6911417,37347464,30049714,263189,786027,1434513],[39835428,2872934,44616626,77354,33933611,98728,10223344,10223344,45605823,25788217,9043072,396914,1748295,166303494,2968128,2968128,287708,11632334,779900,11832936,3263459,2397240,213993441,404915,703995,441532,6896655,54806014,12255429,9442867,16946446,27224262,38067913,561901,4919987,21497306,16914985,19212362,1444216102,23855008,51265841,888456,5139053,4081657,11317498,1215588,1215588,12451031,5813302,72172,10953714,17888474,6518500,1449891,117876226,1325188,902899,5548361,65426177,1002197,2278829,3979773,3979773,2486937,5222756,83900471,31732128,121388,10370747,113015,18249868,13497237,790329,11541683,10062994,9634162,343360,1393409033,276361788,85028760,41179351,4982904,8789776,60367471,27053629,2973462,126050796,18994958,18994958,10269022,54985702,51305184,4328553,6769151,2159067,1866934,5180208,6958538,38254,2689862,634814,28427333,19647681,32776195,543620,20855724,442790,4775110,1273428,130262220,39520,3329282,4024025,628051,37344787,32163045,5223376,2587344,10873,29674920,17173094,314464,4860642,6702379,25130810,211400704,5465629,225199929,4381583,9119005,7219641,33359416,111046910,37797000,10167923,2015490,2930524,19127772,145912022,145912022,13276517,34010,223364,35340680,17196308,8697547,98910,8141343,5896684,98168829,2078723,16359500,60041996,15092171,46745211,11381377,44909351,591798,10160159,8715494,18275704,9749625,69950844,8478242,106759,1403374,9991083,11935764,85042736,85042736,6117933,11925,47123533,43466822,104258327,68207114,61498438,332915074,21497097,3485152,33935765,28704947,200144,30490639,18920657]],\"container\":\"<table class=\\\"display fill-container\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Continent_Name<\\/th>\\n      <th>date<\\/th>\\n      <th>country<\\/th>\\n      <th>lifeeexp_2021<\\/th>\\n      <th>Income.per.person<\\/th>\\n      <th>GDP.total<\\/th>\\n      <th>growth_2021<\\/th>\\n      <th>people_fully_vaccinated_per_hundred<\\/th>\\n      <th>people_vaccinated_per_hundred<\\/th>\\n      <th>verification_vaccination_par_100<\\/th>\\n      <th>total_vaccinations_per_hundred<\\/th>\\n      <th>people_fully_vaccinated<\\/th>\\n      <th>total_boosters<\\/th>\\n      <th>total_vaccinations<\\/th>\\n      <th>population_2021<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[4,5,6,7,8,9,10,11,12,13,14,15]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,20,25,50,100]}},\"evals\":[],\"jsHooks\":[]}\nMais qu’en est-il des statistiques descriptives à proprement parler? Encore une fois, faisons appel à la fonction skim(), présente dans le package modelsummary de Vincent Arel-Bundock :\n\n\nShow code\n\ntableau_4 <- df_country %>%\ndatasummary_skim(caption = \"Statistiques descriptives obtenues avec Skim\") %>%\n  kable_styling(font_size = 4, full_width = FALSE) %>%\n  scroll_box(width = \"800px\", height = \"400px\")\ntableau_4\n\n\n\n\n\n\nUnique (#)\n\n\nMissing (%)\n\n\nMean\n\n\nSD\n\n\nMin\n\n\nMedian\n\n\nMax\n\n\n\n\nlifeeexp_2021\n\n\n168\n\n\n4\n\n\n73.9\n\n\n6.7\n\n\n53.6\n\n\n74.8\n\n\n85.4\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\nIncome.per.person\n\n\n178\n\n\n1\n\n\n20668.0\n\n\n21026.5\n\n\n673.0\n\n\n13016.5\n\n\n113004.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\nGDP.total\n\n\n178\n\n\n1\n\n\n752742127673.2\n\n\n2632246893032.7\n\n\n52189688.0\n\n\n96961053856.0\n\n\n25626456257369.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\ngrowth_2021\n\n\n157\n\n\n1\n\n\n3.0\n\n\n2.3\n\n\n−8.8\n\n\n2.9\n\n\n11.5\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\npeople_fully_vaccinated_per_hundred\n\n\n177\n\n\n0\n\n\n42.7\n\n\n26.9\n\n\n0.0\n\n\n44.0\n\n\n90.3\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\npeople_vaccinated_per_hundred\n\n\n177\n\n\n0\n\n\n49.1\n\n\n27.1\n\n\n0.0\n\n\n52.2\n\n\n99.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\nverification_vaccination_par_100\n\n\n178\n\n\n0\n\n\n97.5\n\n\n62.3\n\n\n0.0\n\n\n97.8\n\n\n259.2\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\ntotal_vaccinations_per_hundred\n\n\n178\n\n\n0\n\n\n97.8\n\n\n62.3\n\n\n0.1\n\n\n99.0\n\n\n259.2\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\npeople_fully_vaccinated\n\n\n177\n\n\n0\n\n\n20864871.9\n\n\n98509028.7\n\n\n2076.0\n\n\n2455800.0\n\n\n1193466000.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\ntotal_boosters\n\n\n74\n\n\n58\n\n\n5975130.3\n\n\n15993014.1\n\n\n2779.0\n\n\n1399659.0\n\n\n120580000.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\ntotal_vaccinations\n\n\n178\n\n\n0\n\n\n48799202.4\n\n\n227172829.3\n\n\n6086.0\n\n\n5950710.0\n\n\n2695181000.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\npopulation_2021\n\n\n178\n\n\n0\n\n\n43051428.5\n\n\n152379919.8\n\n\n10873.0\n\n\n10062994.0\n\n\n1444216102.0\n\n\n\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n  \n\n\nCe tableau présente de nombreuses statistiques descriptives d’importance, à commencer par le nombre d’observations, des mesures de centralité comme la moyenne, des mesures de dispersion comme l’écart type, etc. Les valeurs maximales et minimales sont aussi incluses.\nD’une part, les mesures de dispersion pour des variables comme people_fully_vaccinated_per_hundred montrent de grands écarts entre les pays par rapport à la moyenne, qui elle est pourtant assez élevée. Ainsi, lorsque Our World in Data explique que « 56.9% of the world population has received at least one dose of a COVID-19 vaccine, il conviendrait de s’attarder plus spécifiquement à la distribution de ces variables.\nNos analyses vont se pencher plus spécifiquement sur les déterminants de la vaccination, mais il convient d’emblée de comprendre, et de voir, qui sont les individus vaccinés :\n\n\nShow code\n\ngraphique_1 <- ggplot(df_country) +\n aes(x = Income.per.person, y = people_fully_vaccinated_per_hundred, colour = Continent_Name) +\n geom_point(shape = \"circle\", size = 1.5) +\n scale_color_brewer(palette = \"Paired\", direction = 1) +\n labs(x = \"Revenu par habitant\", y = \"Population complètement vaccinée pour 100 habitants\", \n title = \"Distribution des individus complètement vaccinés\", subtitle = \"En fonction du pays en date du 20 décembre 2021\", \n caption = \"Graphique 1. Source : Gapminder et Our World in Data\", color = \"Continent\") +\n theme_minimal()\n\n\n\nLe graphique 1 montre une distribution inégale en fonction des continents et du revenu par habitant. Le graphique 2 illustre lui aussi, mais à l’Aide d’un histogramme, cette distribution :\n\n\nShow code\n\ngraphique_2 <- ggplot(df_country) +\n aes(x = people_fully_vaccinated_per_hundred, fill = Continent_Name) +\n geom_histogram(bins = 30L) +\n scale_fill_brewer(palette = \"Paired\", direction = 1) +\n labs(x = \"Inidividus complètement vaccinés par 100 habitants\", \n y = \"Nombre de pays\", title = \"Distribution des individus complètement vaccinés\", subtitle = \"En fonction du pays en date du 20 décembre 2021\", \n caption = \"En date du 20 décembre. Source : Gapminder et Our World in Data\", fill = \"Continent\") +\n theme_minimal()\n\n\n\nLes pays africains semblent systématiquement désavantagés à quelques rares exceptions près. Nous avions vu l’ampleur de l’écart type lorsque nous analysions les données descriptives de df_continent, mais le tout semble vouloir se confirmer. De fait, nous allons vérifier statistiquement cette hypothèse ultérieurement dans la section portant sur les analyses, mais ces déterminants semblent à première vue corrélés à l’espérance de vie pour l’année 2021.\n\n\nShow code\n\ngraphique_3 <- ggplot(df_country) +\n aes(x = people_fully_vaccinated_per_hundred, y = lifeeexp_2021, colour = Continent_Name) +\n geom_point(shape = \"circle\", size = 1.5) +\n scale_color_brewer(palette = \"Paired\", direction = 1) +\n labs(x = \"Inidividus complètement vaccinés par 100 habitants\", y = \"Espérance de vie\", title = \"Distribution des individus complètement vaccinés\", \n subtitle = \"Croisé avec l'espérance de vie en date du 20 décembre 2021\", caption = \"En date du 20 décembre. Source : Gapminder et Our World in Data\", \n color = \"Continent\") +\n theme_minimal()\n\n\n\n3. df_semaine\n\n\nShow code\n\nglimpse(df_semaine)\n\n\nRows: 67\nColumns: 232\n$ time                                <chr> \"2020-12-48\", \"2020-12-4…\n$ Africa                              <dbl> NA, NA, NA, NA, NA, NA, …\n$ Europe                              <dbl> 0.000, 1.000, 2911.571, …\n$ Asia                                <dbl> NA, NA, 18.0, 24602.0, 1…\n$ Americas                            <dbl> NA, NA, 99537.0, 214234.…\n$ Oceania                             <dbl> NA, NA, NA, NA, NA, NA, …\n$ total                               <dbl> NA, NA, NA, NA, NA, NA, …\n$ pourcentage_Africa                  <int> NA, NA, NA, NA, NA, NA, …\n$ pourcentage_Europe                  <int> NA, NA, NA, NA, NA, NA, …\n$ pourcentage_Asia                    <int> NA, NA, NA, NA, NA, NA, …\n$ pourcentage_Americas                <int> NA, NA, NA, NA, NA, NA, …\n$ pourcentage_Oceania                 <int> NA, NA, NA, NA, NA, NA, …\n$ daily_vaccinations_per_million      <int> 0, 0, 2654, 45304, 11259…\n$ daily_people_vaccinated             <int> 0, 7, 596127, 2237445, 2…\n$ daily_people_vaccinated_per_hundred <dbl> 0.000, 0.000, 0.205, 4.2…\n$ Afghanistan                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Albania                             <int> 0, 0, 0, 0, 0, 0, 0, 381…\n$ Algeria                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Andorra                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Angola                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Anguilla                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Antigua.and.Barbuda                 <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Argentina                           <int> 0, 0, 0, 0, 31312, 19846…\n$ Armenia                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Aruba                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Australia                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Austria                             <int> 0, 0, 0, 0, 5422, 1634, …\n$ Azerbaijan                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Bahamas                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Bahrain                             <int> 0, 0, 0, 21092, 13565, 2…\n$ Bangladesh                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Barbados                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Belarus                             <int> 0, 0, 0, 0, 1209, 806, 2…\n$ Belgium                             <int> 0, 0, 0, 0, 513, 278, 10…\n$ Belize                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Benin                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Bermuda                             <int> 0, 0, 0, 0, 0, 0, 0, 166…\n$ Bhutan                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Bolivia                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Bonaire.Sint.Eustatius.and.Saba     <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Bosnia.and.Herzegovina              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Botswana                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Brazil                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ British.Virgin.Islands              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Brunei                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Bulgaria                            <int> 0, 0, 0, 0, 4366, 1806, …\n$ Burkina.Faso                        <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Burundi                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Cambodia                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Cameroon                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Canada                              <int> 0, 0, 9952, 29652, 32143…\n$ Cape.Verde                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Cayman.Islands                      <int> 0, 0, 0, 0, 1375, 550, 1…\n$ Central.African.Republic            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Chad                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Chile                               <int> 0, 0, 0, 8744, 8998, 537…\n$ China                               <int> 0, 0, 750000, 1312500, 9…\n$ Colombia                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Comoros                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Congo                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Cook.Islands                        <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Costa.Rica                          <int> 0, 0, 0, 480, 1200, 480,…\n$ Cote.d.Ivoire                       <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Croatia                             <int> 0, 0, 0, 0, 1105, 2210, …\n$ Cuba                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Curacao                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Cyprus                              <int> 0, 0, 0, 0, 0, 0, 1602, …\n$ Czechia                             <int> 0, 0, 0, 0, 10941, 4200,…\n$ Democratic.Republic.of.Congo        <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Denmark                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Djibouti                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Dominica                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Dominican.Republic                  <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Ecuador                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Egypt                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ El.Salvador                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Equatorial.Guinea                   <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Estonia                             <int> 0, 0, 0, 0, 1797, 843, 5…\n$ Eswatini                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Ethiopia                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Faeroe.Islands                      <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Falkland.Islands                    <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Fiji                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Finland                             <int> 0, 0, 0, 0, 0, 0, 26592,…\n$ France                              <int> 0, 0, 0, 0, 1798, 828, 3…\n$ French.Polynesia                    <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Gabon                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Gambia                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Georgia                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Germany                             <int> 0, 0, 0, 0, 142475, 8445…\n$ Ghana                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Gibraltar                           <int> 0, 0, 0, 0, 0, 0, 0, 585…\n$ Greece                              <int> 0, 0, 0, 0, 1899, 1079, …\n$ Greenland                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Grenada                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Guatemala                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Guernsey                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Guinea                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Guinea.Bissau                       <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Guyana                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Haiti                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Honduras                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Hong.Kong                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Hungary                             <int> 0, 0, 0, 0, 18606, 12404…\n$ Iceland                             <int> 0, 0, 0, 0, 63, 126, 441…\n$ India                               <int> 0, 0, 0, 0, 0, 0, 0, 191…\n$ Indonesia                           <int> 0, 0, 0, 0, 0, 0, 0, 528…\n$ Iran                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Iraq                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Ireland                             <int> 0, 0, 0, 0, 1343, 1523, …\n$ Isle.of.Man                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Israel                              <int> 0, 0, 0, 209339, 421114,…\n$ Italy                               <int> 0, 0, 0, 0, 13623, 22867…\n$ Jamaica                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Japan                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Jersey                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Jordan                              <int> 0, 0, 0, 0, 0, 0, 0, 109…\n$ Kazakhstan                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Kenya                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Kiribati                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Kuwait                              <int> 0, 0, 0, 0, 3363, 2242, …\n$ Kyrgyzstan                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Laos                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Latvia                              <int> 0, 0, 2, 18, 963, 660, 3…\n$ Lebanon                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Lesotho                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Liberia                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Libya                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Liechtenstein                       <int> 0, 0, 0, 0, 0, 0, 4, 20,…\n$ Lithuania                           <int> 0, 0, 0, 0, 9955, 2691, …\n$ Luxembourg                          <int> 0, 0, 0, 0, 1019, 375, 5…\n$ Macao                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Madagascar                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Malawi                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Malaysia                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Maldives                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Mali                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Malta                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Mauritania                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Mauritius                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Mexico                              <int> 0, 0, 0, 2600, 13459, 84…\n$ Moldova                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Monaco                              <int> 0, 0, 0, 0, 126, 252, 88…\n$ Mongolia                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Montenegro                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Montserrat                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Morocco                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Mozambique                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Myanmar                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Namibia                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Nauru                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Nepal                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Netherlands                         <int> 0, 0, 0, 0, 0, 0, 22380,…\n$ New.Caledonia                       <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ New.Zealand                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Nicaragua                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Niger                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Nigeria                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Niue                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ North.Macedonia                     <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Norway                              <int> 0, 7, 22, 69, 1006, 663,…\n$ Oman                                <int> 0, 0, 0, 0, 4909, 2392, …\n$ Pakistan                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Palestine                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Panama                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Papua.New.Guinea                    <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Paraguay                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Peru                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Philippines                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Pitcairn                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Poland                              <int> 0, 0, 0, 0, 36650, 21427…\n$ Portugal                            <int> 0, 0, 0, 0, 25966, 10188…\n$ Qatar                               <int> 0, 0, 0, 5404, 6755, 270…\n$ Romania                             <int> 0, 0, 0, 0, 5905, 4184, …\n$ Russia                              <int> 0, 0, 13428, 115847, 312…\n$ Rwanda                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Saint.Helena                        <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Saint.Kitts.and.Nevis               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Saint.Lucia                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Saint.Vincent.and.the.Grenadines    <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Samoa                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ San.Marino                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Sao.Tome.and.Principe               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Saudi.Arabia                        <int> 0, 0, 0, 0, 0, 0, 40476,…\n$ Senegal                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Serbia                              <int> 0, 0, 0, 0, 0, 0, 1150, …\n$ Seychelles                          <int> 0, 0, 0, 0, 0, 0, 0, 426…\n$ Sierra.Leone                        <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Singapore                           <int> 0, 0, 0, 0, 0, 0, 0, 210…\n$ Sint.Maarten..Dutch.part.           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Slovakia                            <int> 0, 0, 0, 0, 0, 0, 20645,…\n$ Slovenia                            <int> 0, 0, 0, 0, 5654, 2062, …\n$ Solomon.Islands                     <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Somalia                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ South.Africa                        <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ South.Korea                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ South.Sudan                         <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Spain                               <int> 0, 0, 0, 0, 0, 0, 239604…\n$ Sri.Lanka                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Sudan                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Suriname                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Sweden                              <int> 0, 0, 0, 0, 0, 0, 55902,…\n$ Switzerland                         <int> 0, 0, 0, 846, 2845, 1566…\n$ Syria                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Taiwan                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Tajikistan                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Tanzania                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Thailand                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Timor                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Togo                                <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Tokelau                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Tonga                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Trinidad.and.Tobago                 <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Tunisia                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Turkey                              <int> 0, 0, 0, 0, 0, 0, 0, 813…\n$ Turkmenistan                        <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Turks.and.Caicos.Islands            <int> 0, 0, 0, 0, 0, 0, 0, 187…\n$ Tuvalu                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Uganda                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Ukraine                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ United.Arab.Emirates                <int> 0, 0, 0, 0, 0, 0, 117628…\n$ United.Kingdom                      <int> 0, 0, 0, 0, 0, 0, 0, 137…\n$ United.States                       <int> 0, 0, 589705, 1888751, 1…\n$ Uruguay                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Uzbekistan                          <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Vanuatu                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Venezuela                           <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Vietnam                             <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Wallis.and.Futuna                   <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Yemen                               <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Zambia                              <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Zimbabwe                            <int> 0, 0, 0, 0, 0, 0, 0, 0, …\n\nMESURE DE DISPERSION (sd et iqr)\n\n\nShow code\n\n#sd(df$sad)\n\n\n\n\n\nShow code\n\n#IQR(df$sad)\n\n\n\n\n\nShow code\n\n#kable(table(df$sag),\n#      caption = \"\",\n#      digits=4) %>%\n#  kable_styling()\n\n\n\nPeut-être que ça vous inspirera!\n\n\n\n",
      "last_modified": "2021-12-21T23:49:35-05:00"
    },
    {
      "path": "contact.html",
      "title": "À propos",
      "description": "Lisez ci-dessous pour en apprendre plus sur la personne derrière ce rapport.\n",
      "author": [],
      "contents": "\nBio\nLe cours FAS1002 est une introduction à la programmation en sciences sociales avec R, un langage de programmation et un environnement statistique populaire pour analyser de données. Principalement convoité pour ses fonctionnalités statistiques avancées, R s’avère autant utilisé en recherche qu’en industrie, ce qui confère un avantage concret à son apprentissage. À ce sujet, R se prête bien à l’apprentissage de la programmation en raison de:\nsa nature libre et gratuite;\nsa polyvalence de fonctionnalités;\nsa popularité et sa variété de domaines d’application;\nla diversité de ressources et d’aide disponible gratuitement sur le Web;\nsa vibrante communauté reconnue pour son inclusivité et son support bienveillant.\nContact\nProgramme | Microprogramme en analyse des mégadonnées en sciences humaines et sociales\nUniversité | Université de Montréal\nCourriel | fas1002@samuelguay.ca\n\n\n\n",
      "last_modified": "2021-12-21T20:07:29-05:00"
    },
    {
      "path": "index.html",
      "title": "Titre de votre projet final",
      "description": "Ceci est votre page d'accueil de votre site web\n",
      "author": [],
      "contents": "\nVous pouvez faire le résumé de votre projet directement sur cette page et utiliser le document 1-intro pour décrire votre projet.\nIl s’agit d’un fichier R Markdown traditionnel. 1\nInclure des graphiques\nComme la classique pyramide à la Figure 1 par exemple:\n\n\nShow code\n\npar(mar = c(0, 1, 0, 1))\npie(\n  c(280, 60, 20),\n  c('Ciel', 'Côté ensoleillé de la pyramide', 'Côté ombragé de la pyramide'),\n  col = c('#0292D8', '#F7EA39', '#C4B632'),\n  init.angle = -50, border = NA\n)\n\n\n\n\nFigure 1: Une très belle tarte\n\n\n\n\nQuand même très cool, non? Vous pouvez mettre des annotations sur le côté!\nToujours très important de mettre les bons niveaux de titres\nUn peu de texte de remplissage pour faire comme si la page était plus longue. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\nRemerciements\nJ’aimerais remercier toutes les étudiantes et tous les étudiants du cours FAS1002 de l’automne 2021 pour leur enthousiasme, leur ouverture et leur rétroaction envers le cours!\n\nAvec des petits trucs sympa comme des notes de bas de page↩︎\n",
      "last_modified": "2021-12-21T20:07:30-05:00"
    }
  ],
  "collections": []
}
